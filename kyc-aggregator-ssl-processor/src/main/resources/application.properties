#via direct springboot
server.port=443


#---SSL enable

# https://www.baeldung.com/spring-tls-setup
# http://localhost:8080/kyc/v1/simpleTrafficTLS    causes Bad Request. This combination of host and port requires TLS.
# https://localhost:8080/kyc/v1/simpleTrafficTLS   provides 200 OK response body


#command to create the key pair
#keytool -genkeypair -alias kyckeypair -keyalg RSA -keysize 2048  -validity 365 -keystore kyc-keystore.p12  -ext san=dns:localhost
# ?? keytool -genkeypair -alias baeldung -keyalg RSA -keysize 4096  -validity 3650 -dname "CN=localhost" -keypass changeit -keystore keystore.p12  -storeType PKCS12 -storepass changeit ??

server.ssl.enabled=true
server.ssl.key-store-type=PKCS12
server.ssl.key-store=classpath:kyc-keystore.p12
server.ssl.key-store-password=changeit

server.ssl.key-alias=kyckeypair
server.ssl.key-password=changeit

server.ssl.protocol=TLS
server.ssl.enabled-protocols=TLSv1.2

#install the kyc-keystore.p12 in to the truststore by double clicking
#	https://www.youtube.com/watch?v=eBEq0Kv7vsw&list=WL&index=1&t=714s
#access from Browser -  https://localhost/kyc/v1/simpleTrafficTLS



#server.ssl.client-auth=need
#server.ssl.trust-store=classpath:keystore.p12
#server.ssl.trust-store-password=changeit

#command to create .cer
#keytool -export -alias baeldung -storepass changeit -file baeldung.cer -keystore keystore.p12

#keytool -import -v -trustcacerts -alias baeldung -file baeldung.cer -keystore cacerts.jks -keypass changeit -storepass changeit

#---SSL enable





debug=true
logging.level.org.springframework.web=DEBUG
